name: Release

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    name: Run Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: [1.x]
        node-version: ['20.15.1']

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-${{ matrix.bun-version }}-${{ matrix.node-version }}-cache
          restore-keys: |
            ${{ runner.os }}-bun-${{ matrix.bun-version }}-${{ matrix.node-version }}-
      - run: bun install
      - run: bun run lint
      - run: bun run build
        env:
          NODE_ENV: production
      - run: bun run test

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '20.15.1'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun
          key: ${{ runner.os }}-bun-latest-${{ matrix.node-version }}-cache
          restore-keys: |
            ${{ runner.os }}-bun-latest-${{ matrix.node-version }}-
      - run: bun install
      - run: bun run build
        env:
          NODE_ENV: production
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bunx semantic-release
